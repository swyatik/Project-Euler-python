'''PROJECT EULER'''

# The sequence of triangle numbers is generated by adding the
# natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# The first ten terms would be:
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five
# hundred divisors?

import time
ts = time.time()

n = 500

triangle_numbers = 0
c = 0
count = 0

while True:
    if count > n:
        break
    count = 0
    c += 1
    triangle_numbers = triangle_numbers + c

    for i in range(1, triangle_numbers + 1):
        if triangle_numbers % i == 0:
            count += 1
        if count > n:
            break

print('The value: ', triangle_numbers)
print('Time seconds: %.5f' % (time.time() - ts))


# The value of the first triangle number to have over five
# hundred divisors = ?